(set-logic QF_AUFLIA)
(set-info :source |
Benchmarks used in the followin paper:
Big proof engines as little proof engines: new results on rewrite-based satisfiability procedure
Alessandro Armando, Maria Paola Bonacina, Silvio Ranise, Stephan Schulz. 
PDPAR'05
http://www.ai.dist.unige.it/pdpar05/


|)
(set-info :smt-lib-version 2.0)
(set-info :category "crafted")
(set-info :status unsat)
(declare-fun a_343 () (Array Int Int))
(declare-fun a_344 () (Array Int Int))
(declare-fun a_345 () (Array Int Int))
(declare-fun a_346 () (Array Int Int))
(declare-fun a_347 () (Array Int Int))
(declare-fun a_348 () (Array Int Int))
(declare-fun a_349 () (Array Int Int))
(declare-fun a_350 () (Array Int Int))
(declare-fun a_351 () (Array Int Int))
(declare-fun a_352 () (Array Int Int))
(declare-fun a_353 () (Array Int Int))
(declare-fun a_354 () (Array Int Int))
(declare-fun a_355 () (Array Int Int))
(declare-fun a_356 () (Array Int Int))
(declare-fun a_357 () (Array Int Int))
(declare-fun a_358 () (Array Int Int))
(declare-fun a_359 () (Array Int Int))
(declare-fun a_360 () (Array Int Int))
(declare-fun a_361 () (Array Int Int))
(declare-fun a_362 () (Array Int Int))
(declare-fun a_363 () (Array Int Int))
(declare-fun a_364 () (Array Int Int))
(declare-fun a_365 () (Array Int Int))
(declare-fun a_366 () (Array Int Int))
(declare-fun a_367 () (Array Int Int))
(declare-fun a_368 () (Array Int Int))
(declare-fun a_369 () (Array Int Int))
(declare-fun a_370 () (Array Int Int))
(declare-fun a_371 () (Array Int Int))
(declare-fun a_372 () (Array Int Int))
(declare-fun a_373 () (Array Int Int))
(declare-fun a_374 () (Array Int Int))
(declare-fun a_375 () (Array Int Int))
(declare-fun a_376 () (Array Int Int))
(declare-fun a_377 () (Array Int Int))
(declare-fun a_378 () (Array Int Int))
(declare-fun a_379 () (Array Int Int))
(declare-fun a_380 () (Array Int Int))
(declare-fun a_381 () (Array Int Int))
(declare-fun a_382 () (Array Int Int))
(declare-fun e_384 () Int)
(declare-fun e_385 () Int)
(declare-fun i_383 () Int)
(declare-fun a1 () (Array Int Int))
(declare-fun e1 () Int)
(declare-fun e10 () Int)
(declare-fun e11 () Int)
(declare-fun e12 () Int)
(declare-fun e13 () Int)
(declare-fun e14 () Int)
(declare-fun e15 () Int)
(declare-fun e16 () Int)
(declare-fun e17 () Int)
(declare-fun e18 () Int)
(declare-fun e19 () Int)
(declare-fun e2 () Int)
(declare-fun e20 () Int)
(declare-fun e3 () Int)
(declare-fun e4 () Int)
(declare-fun e5 () Int)
(declare-fun e6 () Int)
(declare-fun e7 () Int)
(declare-fun e8 () Int)
(declare-fun e9 () Int)
(declare-fun i1 () Int)
(declare-fun i10 () Int)
(declare-fun i11 () Int)
(declare-fun i12 () Int)
(declare-fun i13 () Int)
(declare-fun i14 () Int)
(declare-fun i15 () Int)
(declare-fun i16 () Int)
(declare-fun i17 () Int)
(declare-fun i18 () Int)
(declare-fun i19 () Int)
(declare-fun i2 () Int)
(declare-fun i20 () Int)
(declare-fun i3 () Int)
(declare-fun i4 () Int)
(declare-fun i5 () Int)
(declare-fun i6 () Int)
(declare-fun i7 () Int)
(declare-fun i8 () Int)
(declare-fun i9 () Int)
(declare-fun sk ((Array Int Int) (Array Int Int)) Int)
(assert (= a_343 (store a1 i1 e1)))
(assert (= a_344 (store a_343 i2 e2)))
(assert (= a_345 (store a_344 i3 e3)))
(assert (= a_346 (store a_345 i4 e4)))
(assert (= a_347 (store a_346 i5 e5)))
(assert (= a_348 (store a_347 i6 e6)))
(assert (= a_349 (store a_348 i7 e7)))
(assert (= a_350 (store a_349 i8 e8)))
(assert (= a_351 (store a_350 i9 e9)))
(assert (= a_352 (store a_351 i10 e10)))
(assert (= a_353 (store a_352 i11 e11)))
(assert (= a_354 (store a_353 i12 e12)))
(assert (= a_355 (store a_354 i13 e13)))
(assert (= a_356 (store a_355 i14 e14)))
(assert (= a_357 (store a_356 i15 e15)))
(assert (= a_358 (store a_357 i16 e16)))
(assert (= a_359 (store a_358 i17 e17)))
(assert (= a_360 (store a_359 i18 e18)))
(assert (= a_361 (store a_360 i19 e19)))
(assert (= a_362 (store a_361 i20 e20)))
(assert (= a_363 (store a1 i9 e9)))
(assert (= a_364 (store a_363 i12 e12)))
(assert (= a_365 (store a_364 i4 e4)))
(assert (= a_366 (store a_365 i2 e2)))
(assert (= a_367 (store a_366 i11 e11)))
(assert (= a_368 (store a_367 i19 e19)))
(assert (= a_369 (store a_368 i1 e1)))
(assert (= a_370 (store a_369 i8 e8)))
(assert (= a_371 (store a_370 i15 e15)))
(assert (= a_372 (store a_371 i10 e10)))
(assert (= a_373 (store a_372 i6 e6)))
(assert (= a_374 (store a_373 i14 e14)))
(assert (= a_375 (store a_374 i3 e3)))
(assert (= a_376 (store a_375 i16 e16)))
(assert (= a_377 (store a_376 i5 e5)))
(assert (= a_378 (store a_377 i18 e18)))
(assert (= a_379 (store a_378 i7 e7)))
(assert (= a_380 (store a_379 i20 e20)))
(assert (= a_381 (store a_380 i13 e13)))
(assert (= a_382 (store a_381 i17 e17)))
(assert (= e_384 (select a_362 i_383)))
(assert (= e_385 (select a_382 i_383)))
(assert (= i_383 (sk a_362 a_382)))
(assert (not (= i19 i20)))
(assert (not (= i18 i20)))
(assert (not (= i18 i19)))
(assert (not (= i17 i20)))
(assert (not (= i17 i19)))
(assert (not (= i17 i18)))
(assert (not (= i16 i20)))
(assert (not (= i16 i19)))
(assert (not (= i16 i18)))
(assert (not (= i16 i17)))
(assert (not (= i15 i20)))
(assert (not (= i15 i19)))
(assert (not (= i15 i18)))
(assert (not (= i15 i17)))
(assert (not (= i15 i16)))
(assert (not (= i14 i20)))
(assert (not (= i14 i19)))
(assert (not (= i14 i18)))
(assert (not (= i14 i17)))
(assert (not (= i14 i16)))
(assert (not (= i14 i15)))
(assert (not (= i13 i20)))
(assert (not (= i13 i19)))
(assert (not (= i13 i18)))
(assert (not (= i13 i17)))
(assert (not (= i13 i16)))
(assert (not (= i13 i15)))
(assert (not (= i13 i14)))
(assert (not (= i12 i20)))
(assert (not (= i12 i19)))
(assert (not (= i12 i18)))
(assert (not (= i12 i17)))
(assert (not (= i12 i16)))
(assert (not (= i12 i15)))
(assert (not (= i12 i14)))
(assert (not (= i12 i13)))
(assert (not (= i11 i20)))
(assert (not (= i11 i19)))
(assert (not (= i11 i18)))
(assert (not (= i11 i17)))
(assert (not (= i11 i16)))
(assert (not (= i11 i15)))
(assert (not (= i11 i14)))
(assert (not (= i11 i13)))
(assert (not (= i11 i12)))
(assert (not (= i10 i20)))
(assert (not (= i10 i19)))
(assert (not (= i10 i18)))
(assert (not (= i10 i17)))
(assert (not (= i10 i16)))
(assert (not (= i10 i15)))
(assert (not (= i10 i14)))
(assert (not (= i10 i13)))
(assert (not (= i10 i12)))
(assert (not (= i10 i11)))
(assert (not (= i9 i20)))
(assert (not (= i9 i19)))
(assert (not (= i9 i18)))
(assert (not (= i9 i17)))
(assert (not (= i9 i16)))
(assert (not (= i9 i15)))
(assert (not (= i9 i14)))
(assert (not (= i9 i13)))
(assert (not (= i9 i12)))
(assert (not (= i9 i11)))
(assert (not (= i9 i10)))
(assert (not (= i8 i20)))
(assert (not (= i8 i19)))
(assert (not (= i8 i18)))
(assert (not (= i8 i17)))
(assert (not (= i8 i16)))
(assert (not (= i8 i15)))
(assert (not (= i8 i14)))
(assert (not (= i8 i13)))
(assert (not (= i8 i12)))
(assert (not (= i8 i11)))
(assert (not (= i8 i10)))
(assert (not (= i8 i9)))
(assert (not (= i7 i20)))
(assert (not (= i7 i19)))
(assert (not (= i7 i18)))
(assert (not (= i7 i17)))
(assert (not (= i7 i16)))
(assert (not (= i7 i15)))
(assert (not (= i7 i14)))
(assert (not (= i7 i13)))
(assert (not (= i7 i12)))
(assert (not (= i7 i11)))
(assert (not (= i7 i10)))
(assert (not (= i7 i9)))
(assert (not (= i7 i8)))
(assert (not (= i6 i20)))
(assert (not (= i6 i19)))
(assert (not (= i6 i18)))
(assert (not (= i6 i17)))
(assert (not (= i6 i16)))
(assert (not (= i6 i15)))
(assert (not (= i6 i14)))
(assert (not (= i6 i13)))
(assert (not (= i6 i12)))
(assert (not (= i6 i11)))
(assert (not (= i6 i10)))
(assert (not (= i6 i9)))
(assert (not (= i6 i8)))
(assert (not (= i6 i7)))
(assert (not (= i5 i20)))
(assert (not (= i5 i19)))
(assert (not (= i5 i18)))
(assert (not (= i5 i17)))
(assert (not (= i5 i16)))
(assert (not (= i5 i15)))
(assert (not (= i5 i14)))
(assert (not (= i5 i13)))
(assert (not (= i5 i12)))
(assert (not (= i5 i11)))
(assert (not (= i5 i10)))
(assert (not (= i5 i9)))
(assert (not (= i5 i8)))
(assert (not (= i5 i7)))
(assert (not (= i5 i6)))
(assert (not (= i4 i20)))
(assert (not (= i4 i19)))
(assert (not (= i4 i18)))
(assert (not (= i4 i17)))
(assert (not (= i4 i16)))
(assert (not (= i4 i15)))
(assert (not (= i4 i14)))
(assert (not (= i4 i13)))
(assert (not (= i4 i12)))
(assert (not (= i4 i11)))
(assert (not (= i4 i10)))
(assert (not (= i4 i9)))
(assert (not (= i4 i8)))
(assert (not (= i4 i7)))
(assert (not (= i4 i6)))
(assert (not (= i4 i5)))
(assert (not (= i3 i20)))
(assert (not (= i3 i19)))
(assert (not (= i3 i18)))
(assert (not (= i3 i17)))
(assert (not (= i3 i16)))
(assert (not (= i3 i15)))
(assert (not (= i3 i14)))
(assert (not (= i3 i13)))
(assert (not (= i3 i12)))
(assert (not (= i3 i11)))
(assert (not (= i3 i10)))
(assert (not (= i3 i9)))
(assert (not (= i3 i8)))
(assert (not (= i3 i7)))
(assert (not (= i3 i6)))
(assert (not (= i3 i5)))
(assert (not (= i3 i4)))
(assert (not (= i2 i20)))
(assert (not (= i2 i19)))
(assert (not (= i2 i18)))
(assert (not (= i2 i17)))
(assert (not (= i2 i16)))
(assert (not (= i2 i15)))
(assert (not (= i2 i14)))
(assert (not (= i2 i13)))
(assert (not (= i2 i12)))
(assert (not (= i2 i11)))
(assert (not (= i2 i10)))
(assert (not (= i2 i9)))
(assert (not (= i2 i8)))
(assert (not (= i2 i7)))
(assert (not (= i2 i6)))
(assert (not (= i2 i5)))
(assert (not (= i2 i4)))
(assert (not (= i2 i3)))
(assert (not (= i1 i20)))
(assert (not (= i1 i19)))
(assert (not (= i1 i18)))
(assert (not (= i1 i17)))
(assert (not (= i1 i16)))
(assert (not (= i1 i15)))
(assert (not (= i1 i14)))
(assert (not (= i1 i13)))
(assert (not (= i1 i12)))
(assert (not (= i1 i11)))
(assert (not (= i1 i10)))
(assert (not (= i1 i9)))
(assert (not (= i1 i8)))
(assert (not (= i1 i7)))
(assert (not (= i1 i6)))
(assert (not (= i1 i5)))
(assert (not (= i1 i4)))
(assert (not (= i1 i3)))
(assert (not (= i1 i2)))
(assert (not (= e_384 e_385)))
(check-sat)
(exit)
